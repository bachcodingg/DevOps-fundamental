name: Build and Deploy Website

# Trigger configuration
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container
        run: |
          echo "ðŸ§ª Testing container..."
          # Convert image name to lowercase for Docker compatibility
          IMAGE_NAME_LOWER=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" | tr '[:upper:]' '[:lower:]')
          echo "Using image: $IMAGE_NAME_LOWER"
          
          docker run -d -p 3000:80 --name test-container $IMAGE_NAME_LOWER
          sleep 10
          
          # Test if website loads
          echo "ðŸ“¡ Testing website response..."
          curl -f http://localhost:3000 || exit 1
          
          # Clean up
          echo "ðŸ§¹ Cleaning up test container..."
          docker stop test-container
          docker rm test-container
          
      - name: Success message
        run: echo "âœ… Docker build and test completed successfully!"
